{"remainingRequest":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/src/components/Details/detail.vue?vue&type=template&id=197e57ee&scoped=true&","dependencies":[{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/src/components/Details/detail.vue","mtime":1669627795861},{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/node_modules/cache-loader/dist/cjs.js","mtime":1665559060439},{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665559060933},{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/node_modules/cache-loader/dist/cjs.js","mtime":1665559060439},{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/ens/node_modules/vue-loader/lib/index.js","mtime":1665559060829}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgeyBzdGF0aWNDbGFzczogImJvZHlzIiB9LAogICAgWwogICAgICBfYygKICAgICAgICAiYSIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImFzIiwgYXR0cnM6IHsgaHJlZjogIiMiIH0sIG9uOiB7IGNsaWNrOiBfdm0ubWlzIH0gfSwKICAgICAgICBbX2MoImltZyIsIHsgYXR0cnM6IHsgc3JjOiBfdm0ud2h5WzFdLCBhbHQ6ICIiIH0gfSldCiAgICAgICksCiAgICAgIF9jKCJTaG91IiwgeyByZWY6ICJzaG91IiB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicHJvYmxlbXMiIH0sIFsKICAgICAgICAgIF92bS5jb24KICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnMiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KCJXaHkgcmVwb3J0IHByb2JsZW1zIiksCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgIlBsZWFzZSBkZXNjcmliZSB0aGUgcHJvYmxlbXMgeW91IGhhdmUgZW5jb3VudGVyZWQuIFlvdSBjYW4gYWxzbyByZXBvcnQgdHJhZGVtYXJrIG9yIGNvcHlyaWdodCB2aW9sYXRpb25zICIKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoImVsLWlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogInRleHRhcmVhIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXV0b3NpemU6IHsgbWluUm93czogNywgbWF4Um93czogNyB9LAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udGV4dGFyZWExLAogICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS50ZXh0YXJlYTEgPSAkJHYKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInRleHRhcmVhMSIsCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJidXR0b24iIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImJ1dHRvbiIsIHsgb246IHsgY2xpY2s6IF92bS5jbG9zZWJzIH0gfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiY2FuY2VsIiksCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiYnV0dG9uIiwgeyBvbjogeyBjbGljazogX3ZtLnN1YiB9IH0sIFtfdm0uX3YoIlJlcG9ydCIpXSksCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBdKQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZGl2X2xlZnQiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGVmdCIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1vZGVsIiB9LCBbX3ZtLl92KCJNb2RlbCIpXSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJpbWdzTGlzdCIgfSwKICAgICAgICAgICAgICBfdm0uX2woX3ZtLm1vZGVsTGlzdCwgZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAga2V5OiBpbmRleCwKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImltZ2xpc3QiLAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNlbGVjdE1vZGVsKGluZGV4KQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogaXRlbS5pbWdTcmMsCiAgICAgICAgICAgICAgICAgICAgICAgICJkZWZhdWx0LWltZyI6IGl0ZW0uaW1nU3JjLAogICAgICAgICAgICAgICAgICAgICAgICBhbHQ6ICIgIiwKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAwCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRpdl9jb250ZW50IiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubW9kZWxJZHggPD0gMSwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIm1vZGVsSWR4IDw9IDEiLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29tdGVudCIsCiAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgIHdpZHRoOiBfdm0uYm94U2l6ZSArICJyZW0iLAogICAgICAgICAgICAgICAgaGVpZ2h0OiArX3ZtLmJveFNpemUgKyAwLjkgKyAicmVtIiwKICAgICAgICAgICAgICAgIG1hcmdpblRvcDogIjAuMXJlbSIsCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF9pbWciLAogICAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICAgIHdpZHRoOiBfdm0uYm94U2l6ZSArICJyZW0iLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogX3ZtLmJveFNpemUgKyAicmVtIiwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLm1vZGVsSWR4IDw9IDEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIm1vZGVsSWR4IDw9IDEiLAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udGVudF9pbWcxIiwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMTAwJSIsIGhlaWdodDogIjEwMCUiIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX2MoImNhbnZhcyIsIHsgYXR0cnM6IHsgaWQ6ICJjYW52YXNCb3gzIiB9IH0pXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJzbGlkZXIgY29udGVudC1zaWxkZXIiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJlbC1zbGlkZXIiLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICJzaG93LWlucHV0IjogIiIsCiAgICAgICAgICAgICAgICAgICAgICBzdGVwOiA1LAogICAgICAgICAgICAgICAgICAgICAgbWluOiBfdm0ubWluU2NhbGUsCiAgICAgICAgICAgICAgICAgICAgICBtYXg6IF92bS5tYXhTY2FsZSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7IGlucHV0OiBfdm0uc2xpZGVySW5wdXQsIGNoYW5nZTogX3ZtLnNsaWRlckNoYW5nZSB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmN1clNjYWxlLAogICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICgkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmN1clNjYWxlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImN1clNjYWxlIiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5tb2RlbElkeCA+IDEsCiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJtb2RlbElkeCA+IDEiLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29tdGVudCIsCiAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgIHdpZHRoOiBfdm0uYm94U2l6ZSArICJyZW0iLAogICAgICAgICAgICAgICAgaGVpZ2h0OiArX3ZtLmJveFNpemUgKyAwLjkgKyAicmVtIiwKICAgICAgICAgICAgICAgIG1hcmdpblRvcDogIjAuMXJlbSIsCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJpZnJhbWUiLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjEwMCUiLCBoZWlnaHQ6ICIxMDAlIiwgYm9yZGVyOiAiMCIgfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLmlmcmFtZVNyYyB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZGl2X3N3aXRjaCIgfSwgWwogICAgICAgICAgX3ZtLmxhc3RQaWMgIT0gbnVsbCAmJiBfdm0ubW9kZWxJZHggPiAxCiAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJvcmRpbmFyeS1waWN0dXJlIiwKICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5zd2l0Y2hQaWMgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX2MoImltZyIsIHsgYXR0cnM6IHsgc3JjOiBfdm0ubGFzdFBpYy5pbWdTcmMsIGFsdDogIiIgfSB9KV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfdm0ubGFzdE1vZGVsICE9IG51bGwgJiYgX3ZtLm1vZGVsSWR4IDw9IDEKICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm9yZGluYXJ5LXBpY3R1cmUiLAogICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnN3aXRjaE1vZGVsIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW19jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogX3ZtLmxhc3RNb2RlbC5pbWdTcmMsIGFsdDogIiIgfSB9KV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyaWd0aCIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0IiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGVfbmFtZSIgfSwgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic3BhbnNfMSIgfSwgW192bS5fdigiUGF0dGVybiBOYW1lIildKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNwYW5zXzIiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLm9udGVudF9kYXRhcy50YWdzKSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpdGxlX25hbWUgdGl0bGVfb25lIiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzcGFuc18xIiB9LCBbX3ZtLl92KCJQYXR0ZXJuIElEIildKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNwYW5zXzIiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLm9udGVudF9kYXRhcy5pbWdTbikpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZV9uYW1lIiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzcGFuc18xIiB9LCBbX3ZtLl92KCJJbmNsdWRlZCBGaWxlcyIpXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzcGFuc18yIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5vbnRlbnRfZGF0YXMuZm9ybWF0KSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpdGxlX25hbWUiIH0sIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNwYW5zXzEiIH0sIFtfdm0uX3YoIlNpemUiKV0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic3BhbnNfMiIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uaW1nU2l6ZSkpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZV9uYW1lIiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzcGFuc18xIiB9LCBbX3ZtLl92KCJQcmludCBTaXplIildKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNwYW5zXzIiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLnByaW50U2l6ZTEpKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5wcmludFNpemUyCiAgICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpdGxlX25hbWUiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzcGFuc18xIiB9LCBbX3ZtLl92KCLCoCIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic3BhbnNfMiIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLnByaW50U2l6ZTIpKSwKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5EaXNjb3VudAogICAgICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaW5fMiBpbl8yMyIgfSwgWwogICAgICAgICAgICAgICAgX2MoInAiLCBbX3ZtLl92KF92bS5fcyhfdm0uRGlzY291bnRfdGV4dCkpXSksCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICFfdm0uRGlzY291bnQKICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImluXzIiIH0sCiAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmt1LCBmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJzcGFuIiwgeyBrZXk6IGluZGV4IH0sIFsKICAgICAgICAgICAgICAgICAgICBpbmRleCA9PSAwIHx8CiAgICAgICAgICAgICAgICAgICAgKGluZGV4ID09IDIgJiYgX3ZtLm9udGVudF9kYXRhcy5pc1JlcGVhdCA+IDApIHx8CiAgICAgICAgICAgICAgICAgICAgKGluZGV4ID09IDMgJiYgX3ZtLm9udGVudF9kYXRhcy5pc0xheWVyID4gMCkgfHwKICAgICAgICAgICAgICAgICAgICAoaW5kZXggPT0gMSAmJiBfdm0ub250ZW50X2RhdGFzLmlzTGFyZ2UgPiAwKQogICAgICAgICAgICAgICAgICAgICAgPyBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6IGl0ZW0sIGFsdDogIiIgfSB9KQogICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib3B0aW9uIiB9LCBbCiAgICAgICAgICAgIF92bS5fbSgwKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50IiB9LCBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5vbnRlbnRfZGF0YXMuaXNCdXlvdXQgPD0gMCwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJvbnRlbnRfZGF0YXMuaXNCdXlvdXQgPD0gMCIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmR1YW4sCiAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImR1YW4iLAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5vbnRlbnRfZGF0YXMuaXNVc2UgPiAwCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb250ZW50X2xpc3QiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNvbnRlbnRfbGlzdF9ib29scyg0KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29udGVudF9saXN0X2JvbGxzIGx1c2siIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5saWNlbnNlVHlwZSAhPSA0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImxpY2Vuc2VUeXBlICE9IDQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLmFiWzBdLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubGljZW5zZVR5cGUgPT0gNCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJsaWNlbnNlVHlwZSA9PSA0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5hYlsxXSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oMSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgX3ZtLm9udGVudF9kYXRhcy5pc1VzZSA+IDAKICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbnRlbnRfbGlzdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uY29udGVudF9saXN0X2Jvb2xzKDUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50X2xpc3RfYm9sbHMgbHVzayIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmxpY2Vuc2VUeXBlICE9IDUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAibGljZW5zZVR5cGUgIT0gNSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBfdm0uYWJbMF0sIGFsdDogIiIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5saWNlbnNlVHlwZSA9PSA1LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImxpY2Vuc2VUeXBlID09IDUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLmFiWzFdLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbSgyKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICFfdm0uZHVhbiwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiIWR1YW4iLAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5vbnRlbnRfZGF0YXMuaXNVc2UgPiAwCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb250ZW50X2xpc3QiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNvbnRlbnRfbGlzdF9ib29scyg0KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRlbnRfbGlzdF9ib2xscyIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5saWNlbnNlVHlwZSAhPSA0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJsaWNlbnNlVHlwZSAhPSA0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5hYlswXSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5saWNlbnNlVHlwZSA9PSA0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJsaWNlbnNlVHlwZSA9PSA0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5hYlsxXSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9tKDMpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfdm0ub250ZW50X2RhdGFzLmlzQnV5b3V0ID4gMAogICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbnRlbnRfbGlzdCIsCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uY29udGVudF9saXN0X2Jvb2xzKDMpCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50X2xpc3RfYm9sbHMgIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmxpY2Vuc2VUeXBlICE9IDMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJsaWNlbnNlVHlwZSAhPSAzIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5hYlswXSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubGljZW5zZVR5cGUgPT0gMywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImxpY2Vuc2VUeXBlID09IDMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLmFiWzFdLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oNCksCiAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIndvbmRlciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6IF92bS53b25kZXIsIGFsdDogIiIgfSB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9tKDUpLAogICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwcmljZSIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgW192bS5fdigiUHJpY2UiKV0pLAogICAgICAgICAgICBfYygiZGl2IiwgW192bS5fdigiJCIgKyBfdm0uX3MoX3ZtLmxpY2Vuc2VQcmljZSkpXSksCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib3Blcmxpc3QiIH0sIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ub250ZW50X2RhdGFzLmhhc0NvbGxlY3Rpb24gPT0gMCwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAib250ZW50X2RhdGFzLmhhc0NvbGxlY3Rpb24gPT0gMCIsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJvcGVybGlzdF8yIGJ0bl8xIiwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zaG91KF92bS5vbnRlbnRfZGF0YXMpCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJneDEiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5neFsxXSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIiBDb2xsZWN0ICIpLAogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ub250ZW50X2RhdGFzLmhhc0NvbGxlY3Rpb24gPiAwLAogICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJvbnRlbnRfZGF0YXMuaGFzQ29sbGVjdGlvbiA+IDAiLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAib3Blcmxpc3RfMiAgYnRuXzEyIiwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zaG91KF92bS5vbnRlbnRfZGF0YXMpCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigiIENvbGxlY3QgIildCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLm9udGVudF9kYXRhcy5pc0J1eSA9PSAyLAogICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJvbnRlbnRfZGF0YXMuaXNCdXkgPT0gMiIsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJvcGVybGlzdF8yIGJhZyAgZG93bnMiLAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udGhpc0Rvd25sb2FkKF92bS5vbnRlbnRfZGF0YXMpCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX3ZtLl92KCIgRG93bmxvYWQgRmlsZSAiKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAic3ZnIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZG93bmxvYWQiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjAuMnJlbSIsCiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIwLjJyZW0iLAogICAgICAgICAgICAgICAgICAgICAgdmlld0JveDogIjAgMCAyMCAyMCIsCiAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAiIiwKICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOiAiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygicGF0aCIsIHsKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJmaWxsLXJ1bGUiOiAiZXZlbm9kZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjbGlwLXJ1bGUiOiAiZXZlbm9kZCIsCiAgICAgICAgICAgICAgICAgICAgICAgIGQ6ICJNNi43NTY5IDYuMzI5NzdDNy4wNDY3IDYuMzI5NzcgNy4yODE5IDYuNTY2MTggNy4yODE5IDYuODU3NDdDNy4yODE5IDcuMTQ4NzYgNy4wNDY3IDcuMzg1MTYgNi43NTY5IDcuMzg1MTZINi4wOTgyQzQuOTY4NCA3LjM4NTE2IDQuMDUgOC4zMDc1OCA0LjA1IDkuNDQyNDhWMTIuODc5NUM0LjA1IDE0LjAxODcgNC45NzEyIDE0Ljk0NDYgNi4xMDQ1IDE0Ljk0NDZIMTMuOTAyNUMxNS4wMzA5IDE0Ljk0NDYgMTUuOTUgMTQuMDIwOCAxNS45NSAxMi44ODY2VjkuNDUwMjJDMTUuOTUgOC4zMTExIDE1LjAyODEgNy4zODUxNiAxMy44OTYyIDcuMzg1MTZIMTMuMjQzOEMxMi45NTQgNy4zODUxNiAxMi43MTg4IDcuMTQ4NzYgMTIuNzE4OCA2Ljg1NzQ3QzEyLjcxODggNi41NjYxOCAxMi45NTQgNi4zMjk3NyAxMy4yNDM4IDYuMzI5NzdIMTMuODk2MkMxNS42MDc3IDYuMzI5NzcgMTcgNy43Mjk5MyAxNyA5LjQ1MDIyVjEyLjg4NjZDMTcgMTQuNjAzNCAxNS42MDk4IDE2IDEzLjkwMjUgMTZINi4xMDQ1QzQuMzkzIDE2IDMgMTQuNjAwNSAzIDEyLjg3OTVWOS40NDI0OEMzIDcuNzI1NzEgNC4zODk1IDYuMzI5NzcgNi4wOTgyIDYuMzI5NzdINi43NTY5Wk0xMC4wMDA2IDNDMTAuMjkwNCAzIDEwLjUyNTYgMy4yMzY0MSAxMC41MjU2IDMuNTI3N0wxMC41MjUgMTAuNzIyN0wxMS42NzAxIDkuNTY3MzdDMTEuODc0NSA5LjM2MDUxIDEyLjIwNjMgOS4zNjA1MSAxMi40MTIxIDkuNTY1OTZDMTIuNjE3MiA5Ljc3MTQxIDEyLjYxNzkgMTAuMTA1NiAxMi40MTM1IDEwLjMxMjVMMTAuMzc3IDEyLjM2NzRDMTAuMzU3MSAxMi4zODggMTAuMzM1NiAxMi40MDY5IDEwLjMxMjYgMTIuNDI0TDEwLjM3MjMgMTIuMzcxOUMxMC4zNDk3IDEyLjM5NDkgMTAuMzI1MyAxMi40MTU1IDEwLjI5OTIgMTIuNDMzN0MxMC4yODM0IDEyLjQ0NDcgMTAuMjY3MiAxMi40NTQ3IDEwLjI1MDYgMTIuNDYzOEMxMC4yNDI1IDEyLjQ2ODIgMTAuMjM0MSAxMi40NzI1IDEwLjIyNTUgMTIuNDc2NkMxMC4yMTAzIDEyLjQ4MzkgMTAuMTk0NiAxMi40OTA0IDEwLjE3ODYgMTIuNDk2M0MxMC4xNzA1IDEyLjQ5OTEgMTAuMTYyNSAxMi41MDE4IDEwLjE1NDQgMTIuNTA0M0MxMC4xMzQ3IDEyLjUxMDQgMTAuMTE0NCAxMi41MTU0IDEwLjA5MzcgMTIuNTE5MUMxMC4wODkxIDEyLjUxOTkgMTAuMDg0OCAxMi41MjA2IDEwLjA4MDYgMTIuNTIxM0MxMC4wNjM5IDEyLjUyMzkgMTAuMDQ2NCAxMi41MjU3IDEwLjAyODggMTIuNTI2NkMxMC4wMTkzIDEyLjUyNzEgMTAuMDA5OSAxMi41Mjc0IDEwLjAwMDYgMTIuNTI3NEw5Ljk3MjcgMTIuNTI1M0w5LjkyOTM1IDEyLjUyMjZDOS45MjYyNiAxMi41MjIyIDkuOTIzMTggMTIuNTIxNyA5LjkyMDExIDEyLjUyMTJMMTAuMDAwNiAxMi41Mjc0QzkuOTY5MjggMTIuNTI3NCA5LjkzODI0IDEyLjUyNDYgOS45MDc4MSAxMi41MTkxQzkuODg2NzYgMTIuNTE1NCA5Ljg2NjUzIDEyLjUxMDQgOS44NDY4IDEyLjUwNDRDOS44Mzg5MSAxMi41MDE5IDkuODMxMTcgMTIuNDk5MyA5LjgyMzQ5IDEyLjQ5NjVDOS44MDc0IDEyLjQ5MDggOS43OTE1MiAxMi40ODQyIDkuNzc2MDUgMTIuNDc2OEM5Ljc2NjY1IDEyLjQ3MjMgOS43NTczIDEyLjQ2NzUgOS43NDgxIDEyLjQ2MjRDOS43MzUxNyAxMi40NTUzIDkuNzIyNzEgMTIuNDQ3NyA5LjcxMDU5IDEyLjQzOTZDOS43MDIzIDEyLjQzNDEgOS42OTQgMTIuNDI4MiA5LjY4NTg3IDEyLjQyMkM5LjY2NTg3IDEyLjQwNyA5LjY0NyAxMi4zOTA1IDkuNjI5MzggMTIuMzcyOEw5LjYyODg2IDEyLjM3MTlMNy41ODc2NiAxMC4zMTI1QzcuMzgzMjYgMTAuMTA1NiA3LjM4Mzk2IDkuNzcxNDEgNy41ODkwNiA5LjU2NTk2QzcuNzk0ODYgOS4zNjA1MSA4LjEyNjY2IDkuMzYwNTEgOC4zMzEwNiA5LjU2NzM3TDkuNDc1IDEwLjcyMjdMOS40NzU1NiAzLjUyNzdDOS40NzU1NiAzLjIzNjQxIDkuNzEwNzYgMyAxMC4wMDA2IDNaIiwKICAgICAgICAgICAgICAgICAgICAgICAgZmlsbDogIiMyMjIyMjIiLAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgImJhY2tncm91bmQtY29sb3IiOiAiZ3JlZW4iLAogICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAiYWJzb2x1dGUiLAogICAgICAgICAgICAgICAgICAgIHRvcDogIjAiLAogICAgICAgICAgICAgICAgICAgIGxlZnQ6ICIwIiwKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIwLjQ2cmVtIiwKICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAiMC40IiwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgc3R5bGU6IHsgd2lkdGg6IF92bS5wcm9ncmVzcyArICIlIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5vbnRlbnRfZGF0YXMuaXNCdXkgPT0gMSwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAib250ZW50X2RhdGFzLmlzQnV5ID09IDEiLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAib3Blcmxpc3RfMiBiYWcgYnRuX3giLAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZ290b1Nob3BpbmdDYXIuYXBwbHkobnVsbCwgYXJndW1lbnRzKQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIFZpZXcgQ2FydCIpLAogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJneDEiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5neFsyXSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5vbnRlbnRfZGF0YXMuaXNCdXkgPT0gMCwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAib250ZW50X2RhdGFzLmlzQnV5ID09IDAiLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAib3Blcmxpc3RfMiBidG5feCIsCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5hZGRTaG9waW5nQ2FyLmFwcGx5KG51bGwsIGFyZ3VtZW50cykKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImd4MSIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLmd4WzBdLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF92bS5fdigiQWRkIFRvIEJhZyAiKSwKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWlkZGxlIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljU3R5bGU6IHsgZGlzcGxheTogInRhYmxlIiB9IH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY1N0eWxlOiB7IGRpc3BsYXk6ICJ0YWJsZS1yb3ciIH0gfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpdGxlcyIgfSwgW192bS5fdigiIFByb2R1Y3QgVHlwZXMgIildKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbnRlbnRzIiB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF92bS5fbChfdm0udHlwZXMsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoaW5kZXggPiAwID8gIiwiIDogIiIpKSwKICAgICAgICAgICAgICAgICAgICBpdGVtICE9ICIiCiAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGluZGV4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogImphdmFzY3JpcHQ6dm9pZCgwKSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5nb3MoaXRlbSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhpdGVtKSldCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNTdHlsZTogeyBkaXNwbGF5OiAidGFibGUtcm93IiB9IH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZXMiIH0sIFtfdm0uX3YoIiBDYXRlZ29yaWVzICIpXSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50cyIgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmNhdGVnb3JpZXMsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoaW5kZXggPiAwID8gIiwiIDogIiIpKSwKICAgICAgICAgICAgICAgICAgICBpdGVtICE9ICIiCiAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGluZGV4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogImphdmFzY3JpcHQ6dm9pZCgwKSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5nb3MoaXRlbSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhpdGVtKSldCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNTdHlsZTogeyBkaXNwbGF5OiAidGFibGUtcm93IiB9IH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZXMiIH0sIFtfdm0uX3YoIiBUYWdzICIpXSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50cyIgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLnRhZ3MsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoaW5kZXggPiAwID8gIiwiIDogIiIpKSwKICAgICAgICAgICAgICAgICAgICBpdGVtICE9ICIiCiAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGluZGV4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogImphdmFzY3JpcHQ6dm9pZCgwKSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5nb3MoaXRlbSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhpdGVtKSldCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMgogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIlJlbGF0ZWQiIH0sIFsKICAgICAgICBfdm0uX3YoIlBvcHVsYXIgcmVjb21tZW5kYXRpb25zIiksCiAgICAgIF0pLAogICAgICBfYygiQ2VsbCIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgbHV4OiAwLjE2LAogICAgICAgICAgbGluZWxpc3Q6IF92bS5saXN0YnVzcywKICAgICAgICAgIGNvbnNIZWlnaHQ6IF92bS5jb25zSGVpZ2h0dCwKICAgICAgICAgIGRlbGV0ZUljb246IGZhbHNlLAogICAgICAgIH0sCiAgICAgICAgb246IHsgc2hvdTogX3ZtLnNob3UgfSwKICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiUmVsYXRlZCIgfSwgW192bS5fdigiUmVsYXRlZCBEZXNpZ25zIildKSwKICAgICAgX2MoIkNlbGwiLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIGx1eDogMC4xNiwKICAgICAgICAgIGxpbmVsaXN0OiBfdm0ubGlzdGJ1cywKICAgICAgICAgIGNvbnNIZWlnaHQ6IF92bS5jb25zSGVpZ2h0cywKICAgICAgICAgIGRlbGV0ZUljb246IGZhbHNlLAogICAgICAgIH0sCiAgICAgICAgb246IHsgc2hvdTogX3ZtLnNob3UgfSwKICAgICAgfSksCiAgICAgIF9jKCJCb3R0b20iKSwKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm9uZSIgfSwgW192bS5fdigiTGljZW5zZSBUeXBlIildKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0d28iIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogIi9odG1sL0NvbXBhcmlzb24uaHRtbCIsIHRhcmdldDogIl9ibGFuayIgfSB9LAogICAgICAgICAgW192bS5fdigiQ29tcGFyZSBMaWNlbnNlcyIpXQogICAgICAgICksCiAgICAgIF0pLAogICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJlbC1pY29uLXdhcm5pbmctb3V0bGluZSIgfSksCiAgICBdKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb25faWR2ICIgfSwgWwogICAgICBfYygiZGl2IiwgW192bS5fdigiQ29tbWVyY2lhbCAobGF5ZXJlZCBmaWxlL0pQRUcpIildKSwKICAgIF0pCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbl9pZHYiIH0sIFsKICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIkNvbW1lcmNpYWwgVW5saW1pdGVkIChsYXllcmVkIGZpbGUvSlBFRykiKV0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29uX2lkdiIgfSwgWwogICAgICBfYygiZGl2IiwgW192bS5fdigiQ29tbWVyY2lhbCAoTGF5ZXJlZCBQU0QgKyBKUEVHKSIpXSksCiAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCJVcCB0byA1MDAgZW5kIHByb2R1Y3RzIGZvciBzYWxlIildKSwKICAgIF0pCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbl9pZHYiIH0sIFsKICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIkNvbW1lcmNpYWwgKExheWVyZWQgUFNEICsgSlBFRykiKV0pLAogICAgICBfYygiZGl2IiwgW192bS5fdigiVXAgdG8gNTAwIGVuZCBwcm9kdWN0cyBmb3Igc2FsZSIpXSksCiAgICBdKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ3b25kZXJfdGV4dCIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRlbW8yIiB9LCBbCiAgICAgICAgX2MoImVtIiwgW192bS5fdigi4peGIildKSwKICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIuKXhiIpXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0cyIgfSwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIFRoaXMgcHJvZHVjdCBpcyBhIGJ1eW91dCBwaWN0dXJlLCBhbmQgd2lsbCBiZSBhdXRvbWF0aWNhbGx5IHJlbW92ZWQgZnJvbSB0aGUgc2hlbGYgYWZ0ZXIgcHVyY2hhc2UgWW91IGNhbid0IHJldHVybiB0aGUgZ29vZHMgYWZ0ZXIgcHVyY2hhc2UuIFBsZWFzZSBjb250YWN0IGN1c3RvbWVyIHNlcnZpY2UgaWYgdGhlcmUgaXMgYW55IHF1YWxpdHkgcHJvYmxlbS4gUGxlYXNlIGNvbmZpcm0gdGhlIGZvbGxvdy11cCBvcGVyYXRpb24gIgogICAgICAgICAgKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICBdKQogIH0sCl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}