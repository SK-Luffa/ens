{"remainingRequest":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/src/components/Navigation/index.vue?vue&type=template&id=07228472&scoped=true&","dependencies":[{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/src/components/Navigation/index.vue","mtime":1666866595790},{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/node_modules/cache-loader/dist/cjs.js","mtime":1665559060439},{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665559060933},{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/node_modules/cache-loader/dist/cjs.js","mtime":1665559060439},{"path":"/Users/dengzixu/WebstormProjects/vue/pattern100_en_web/en/node_modules/vue-loader/lib/index.js","mtime":1665559060829}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgeyBzdGF0aWNDbGFzczogIk5hdmlnYXRpb24iLCBjbGFzczogdGhpcy4kc3RvcmUuc3RhdGUuTmF2aWdhdGlvbl9pbiB9LAogICAgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZpbGVzYiIgfSksCiAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICBzdGF0aWNDbGFzczogImZpbGVzIiwKICAgICAgICBhdHRyczogeyB0eXBlOiAiZmlsZSIsIGF1dG9jb21wbGV0ZTogIm5ldy1wYXNzd29yZCIgfSwKICAgICAgfSksCiAgICAgIF9jKCJ1bCIsIHsgc3RhdGljQ2xhc3M6ICJOYXZpZ2F0aW9uX3VsIiB9LCBbCiAgICAgICAgX2MoImxpIiwgeyBzdGF0aWNDbGFzczogIk5hdmlnYXRpb25fdWxfbGlfb25lIGxpcyIgfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbWciLAogICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5sb2dpbiwgYWx0OiAiIiB9LAogICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLmxvZ28gfSwKICAgICAgICAgIH0pLAogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWFsbCIsIG9uOiB7IG1vdXNlb3ZlcjogX3ZtLm1hbGxzIH0gfSwgWwogICAgICAgICAgX2MoInNwYW4iLCB7IG9uOiB7IGNsaWNrOiBfdm0uTWFsbHMgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLk1hbGwpICsgIiAiKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInN2ZyIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYWxscyIsCiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICB3aWR0aDogIjIwIiwKICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMjAiLAogICAgICAgICAgICAgICAgICB2aWV3Qm94OiAiMCAwIDIwIDIwIiwKICAgICAgICAgICAgICAgICAgZmlsbDogIm5vbmUiLAogICAgICAgICAgICAgICAgICB4bWxuczogImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLk1hbGxzIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygicGF0aCIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBkOiAiTTEwIDE2TDE2IDEwTDEwIDQiLAogICAgICAgICAgICAgICAgICAgIHN0cm9rZTogIiNDNEM0QzQiLAogICAgICAgICAgICAgICAgICAgICJzdHJva2Utd2lkdGgiOiAiMiIsCiAgICAgICAgICAgICAgICAgICAgInN0cm9rZS1saW5lY2FwIjogInJvdW5kIiwKICAgICAgICAgICAgICAgICAgICAic3Ryb2tlLWxpbmVqb2luIjogInJvdW5kIiwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLm1hbHMsCiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJtYWxzIiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImRyb3BEb3duIiwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZHJvcERvd25zIiB9LAogICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5zZWxlY3RBbGxUeXBlLCBmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ubmFtZSAhPSAiUHJpY2UiICYmIGl0ZW0ubmFtZSAhPSAiTGljZW5zZSB0eXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIml0ZW0ubmFtZSAhPSAnUHJpY2UnICYmIGl0ZW0ubmFtZSAhPSAnTGljZW5zZSB0eXBlJyIsCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAga2V5OiBpbmRleCwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZHJvcERvd25fdGl0bGUiLAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IF92bS5kZWdbaW5kZXhdLAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgbW91c2VvdmVyOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5kcm9wRG93bl90aXRsZXMoaXRlbS5kYXRhLCBpbmRleCkKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGl0ZW0ubmFtZSkgKyAiICIpLAogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJzdmciLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMjAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMjAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveDogIjAgMCAyMCAyMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAibm9uZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxuczogImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInBhdGgiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkOiAiTTEwIDE2TDE2IDEwTDEwIDQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U6ICIjQzRDNEM0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInN0cm9rZS13aWR0aCI6ICIyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInN0cm9rZS1saW5lY2FwIjogInJvdW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInN0cm9rZS1saW5lam9pbiI6ICJyb3VuZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmRyb3BEb3duTGlzdF9zaG93LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImRyb3BEb3duTGlzdF9zaG93IiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImRyb3BEb3duTGlzdCIsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29sdW1uXzAiIH0sCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5zZWxlY3RBbGxUeXBlXzEsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogaW5kZXgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJkcm9wRG93bl90aXRsZSAiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBfdm0uZGVnc1tpbmRleF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2NyZWVucyhpdGVtLCBpbmRleCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dCAiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoaXRlbS53b3JkKSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJudW1iZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoaXRlbS5wcm9kdWN0Q291bnQpKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgIDAKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbHVtbl8xIiB9LAogICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0uc2VsZWN0QWxsVHlwZV8yLCBmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGluZGV4LAogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZHJvcERvd25fdGl0bGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBfdm0uZGVnc1tpbmRleCArIDE1XSwKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zY3JlZW5zKGl0ZW0sIGluZGV4ICsgMTUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgW192bS5fdihfdm0uX3MoaXRlbS53b3JkKSldKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgW192bS5fdihfdm0uX3MoaXRlbS5wcm9kdWN0Q291bnQpKV0pLAogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgeyBzdGF0aWNDbGFzczogIk5hdmlnYXRpb25fdWxfbGlfdHdvIGxpcyIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJOYXZpZ2F0aW9uX3VsX2xpX3R3b19kaXYiIH0sIFsKICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLiRzdG9yZS5zdGF0ZS53b3JsZCwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIiRzdG9yZS5zdGF0ZS53b3JsZCIsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJOYXZpZ2F0aW9uX3VsX2xpX3R3b19kaXZfaW5wdXQiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBhdXRvY29tcGxldGU6ICJuZXctcGFzc3dvcmQiLAogICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICJzZWFyY2giLAogICAgICAgICAgICAgICAgdHlwZTogInRleHQiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS4kc3RvcmUuc3RhdGUud29ybGQgfSwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAga2V5dXA6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgICEkZXZlbnQudHlwZS5pbmRleE9mKCJrZXkiKSAmJgogICAgICAgICAgICAgICAgICAgIF92bS5faygkZXZlbnQua2V5Q29kZSwgImVudGVyIiwgMTMsICRldmVudC5rZXksICJFbnRlciIpCiAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5rZXl3b3Jkcy5hcHBseShudWxsLCBhcmd1bWVudHMpCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLiRzdG9yZS5zdGF0ZSwgIndvcmxkIiwgJGV2ZW50LnRhcmdldC52YWx1ZSkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJOYXZpZ2F0aW9uX3VsX2xpX3R3b19kaXZfaW1nX29uZSIsCiAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBfdm0uVmVjdG9yLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS51cGxvYWRzIH0sCiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAic3ZnIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIk5hdmlnYXRpb25fdWxfbGlfdHdvX2Rpdl9pbWdfdHdvIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHdpZHRoOiAiNDYiLAogICAgICAgICAgICAgICAgICBoZWlnaHQ6ICI0NiIsCiAgICAgICAgICAgICAgICAgIHZpZXdCb3g6ICIwIDAgNDYgNDYiLAogICAgICAgICAgICAgICAgICBmaWxsOiAibm9uZSIsCiAgICAgICAgICAgICAgICAgIHhtbG5zOiAiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0ua2V5d29yZHMgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJyZWN0IiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiNDYiLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjQ2IiwKICAgICAgICAgICAgICAgICAgICByeDogIjIzIiwKICAgICAgICAgICAgICAgICAgICBmaWxsOiAiIzM3M0FDQiIsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJwYXRoIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICJmaWxsLXJ1bGUiOiAiZXZlbm9kZCIsCiAgICAgICAgICAgICAgICAgICAgImNsaXAtcnVsZSI6ICJldmVub2RkIiwKICAgICAgICAgICAgICAgICAgICBkOiAiTTI0LjQzMDQgMTYuNjE4QzI2LjU4NzcgMTguNzc1MyAyNi41ODc3IDIyLjI3MzEgMjQuNDMwNCAyNC40MzA0QzIyLjI3MyAyNi41ODc3IDE4Ljc3NTMgMjYuNTg3NyAxNi42MTggMjQuNDMwNEMxNC40NjA3IDIyLjI3MzEgMTQuNDYwNyAxOC43NzUzIDE2LjYxOCAxNi42MThDMTguNzc1MyAxNC40NjA3IDIyLjI3MyAxNC40NjA3IDI0LjQzMDQgMTYuNjE4Wk0yNi41NDkzIDI1LjAzMjdDMjguNzYwNCAyMi4wODU0IDI4LjUyNTUgMTcuODg0NyAyNS44NDQ2IDE1LjIwMzhDMjIuOTA2MiAxMi4yNjU0IDE4LjE0MjIgMTIuMjY1NCAxNS4yMDM4IDE1LjIwMzhDMTIuMjY1NCAxOC4xNDIyIDEyLjI2NTQgMjIuOTA2MiAxNS4yMDM4IDI1Ljg0NDZDMTcuODg0OCAyOC41MjU2IDIyLjA4NTcgMjguNzYwNSAyNS4wMzMgMjYuNTQ5MUMyNS4wNDk1IDI2LjU2ODEgMjUuMDY2OCAyNi41ODY2IDI1LjA4NDggMjYuNjA0N0wzMS4xNjUzIDMyLjY4NTJDMzEuNTg1MSAzMy4xMDUgMzIuMjY1NyAzMy4xMDUgMzIuNjg1NCAzMi42ODUyQzMzLjEwNTIgMzIuMjY1NCAzMy4xMDUyIDMxLjU4NDggMzIuNjg1NCAzMS4xNjUxTDI2LjYwNSAyNS4wODQ2QzI2LjU4NjkgMjUuMDY2NSAyNi41NjgzIDI1LjA0OTIgMjYuNTQ5MyAyNS4wMzI3WiIsCiAgICAgICAgICAgICAgICAgICAgZmlsbDogIndoaXRlIiwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICAgIF9jKAogICAgICAgICAgImxpIiwKICAgICAgICAgIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgdmFsdWU6ICF0aGlzLiRzdG9yZS5zdGF0ZS5sb2dpbl9ib29sLAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIiF0aGlzLiRzdG9yZS5zdGF0ZS5sb2dpbl9ib29sIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBzdGF0aWNDbGFzczogIk5hdmlnYXRpb25fdWxfbGlfdGhyZWUgbGlzIiwKICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiU2hvcHBpbmcgaWNvbnMiLAogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgIm1hcmdpbi1yaWdodCI6ICIwLjVyZW0iLAogICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICJ0cmFuc2xhdGVZKC01JSkiLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uc2hvcHBpbmcgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic3ZncyIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgIGNsYXNzOiBfdm0uc3ZnYywKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5pY29uX2xpc3RbMV0sIGFsdDogIiIgfSwKICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibG9naW4iLCBvbjogeyBjbGljazogX3ZtLmxvZ2luQnRuIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLkxvZykgKyAiICIgKyBfdm0uX3MoX3ZtLmlucykpLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzaWdudXAiLCBvbjogeyBjbGljazogX3ZtLnNpZ251cEJ0biB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5TaWduKSArICIgIiArIF92bS5fcyhfdm0udXApKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJsaSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLiRzdG9yZS5zdGF0ZS5sb2dpbl9ib29sLAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInRoaXMuJHN0b3JlLnN0YXRlLmxvZ2luX2Jvb2wiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiTmF2aWdhdGlvbl91bF9saV90aHJlZSBsaXAiLAogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIkNvbGxlY3Rpb24gaWNvbnMiLCBvbjogeyBjbGljazogX3ZtLkZhdm9yaXRlcyB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzdmdzIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IF92bS5zdmdiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLmljb25fbGlzdFswXSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIlNob3BwaW5nIGljb25zIiwgb246IHsgY2xpY2s6IF92bS5zaG9wcGluZyB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzdmdzIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IF92bS5zdmdjLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogX3ZtLmljb25fbGlzdFsxXSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImRvd24gaWNvbnMiLCBvbjogeyBjbGljazogX3ZtLnBlcnNvbmFsQ2VudGVyIH0gfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImRvd25fdXNlcl9pY29uIiB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAiICIgKyBfdm0uX3ModGhpcy4kc3RvcmUuc3RhdGUudXNlcm5hbWUuaWNvbl90ZXh0KSArICIgIgogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImRvd25zIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBfdm0uaWNvbl9saXN0WzJdLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaG92ZXJkcyIgfSwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImhvdmVyZCIsCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaG92ZXJfZW1haWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0ucGVyc29uYSB9LAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJob3Zlcl90aXRsZSIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgQWNjb3VudCAiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IG9uOiB7IGNsaWNrOiBfdm0uRmF2b3JpdGVzIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIkZhdm9yaXRlcyIpLAogICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBvbjogeyBjbGljazogX3ZtLnNob3BwaW5nIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIlNob3BwaW5nIENhcnQiKSwKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgb246IHsgY2xpY2s6IF92bS5vcmRlckZvcm0gfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiTXkgT3JkZXIiKSwKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgb246IHsgY2xpY2s6IF92bS5vdXQgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiTG9nIG91dCIpLAogICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgXQogICAgICAgICksCiAgICAgIF0pLAogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}